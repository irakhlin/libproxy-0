Index: libproxy/test/get-pac-test.cpp
===================================================================
--- a/libproxy/test/get-pac-test.cpp	(revision 870)
+++ b/libproxy/test/get-pac-test.cpp	(working copy)
@@ -3,12 +3,15 @@
 #include <sstream>
 #include <string>
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/types.h>
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
 #include <unistd.h>
 #include <string.h>
 #include <pthread.h>
+#include <sys/select.h>
 
 #include "url.hpp"
 
Index: libproxy/modules/config_macosx.cpp
===================================================================
--- a/libproxy/modules/config_macosx.cpp	(revision 870)
+++ b/libproxy/modules/config_macosx.cpp	(working copy)
@@ -114,7 +114,7 @@
 
 class macosx_config_extension : public config_extension {
 public:
-	vector<url> get_config(const url &url) throw (runtime_error) {
+	vector<url> get_config(const url &the_url) throw (runtime_error) {
 		string tmp;
 		CFDictionaryRef proxies = SCDynamicStoreCopyProxies(NULL);
 		vector<url> response;
@@ -136,8 +136,8 @@
 		}
 
 		// http:// or socks:// (TODO: gopher:// and rtsp:// ???)
-		else if ((protocol_url(proxies, toupper(url.get_scheme()), tmp)    && url::is_valid(tmp)) ||
-		    (protocol_url(proxies, capitalize(url.get_scheme()), tmp) && url::is_valid(tmp)) ||
+		else if ((protocol_url(proxies, toupper(the_url.get_scheme()), tmp)    && url::is_valid(tmp)) ||
+		    (protocol_url(proxies, capitalize(the_url.get_scheme()), tmp) && url::is_valid(tmp)) ||
 		    (protocol_url(proxies, toupper("http"), tmp)              && url::is_valid(tmp)) ||
 	            (protocol_url(proxies, toupper("socks"), tmp)             && url::is_valid(tmp))) {
 			CFRelease(proxies);
